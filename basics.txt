#include<iostream>
#include<math.h>
#include<string.h>
int main(){
   std::cout << "Hey ";
    
}
-----------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int main(){
    int x;
    cin >> x;
    cout << "Hey " << x;
    
}
-------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int main(){
    string s;
    getline(cin,s);
    cout << s;
    return 0;
}
-------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int main(){
    int age;
    cin >> age;
    if(age>=18){
    cout << "eligible";
    }
    else{
    cout << "not eligible";
    }
    return 0;
}
--------------------------------------------------------------------
switch
======
#include<bits/stdc++.h>
using namespace std;
int main(){
    int day;
    cin >> day;
    switch(day) {
        case 1:
        cout << "monday";
        break;
        case 2:
        cout << "tuesday";
        break;
        case 3:
        cout << "wednesday";
        break;
        case 4:
        cout << "thursday";
        break;
        case 5:
        cout << "friday";
        break;
        case 6:
        cout << "saturday";
        break;
        case 7:
        cout << "sunday";
        break;
        return 0;
    }
}
---------------------------------------------------------------------
basic array
#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[3];
    cin >> arr[0] >> arr[1] >> arr[2];
    cout << arr[2];
    return 0;
        
}
i/p = 2 4 5          o/p = 5
------------------------------------------------------------------------
basic string
============
#include<bits/stdc++.h>
using namespace std;
int main(){
    string s = "arun";
    int len = s.size();
    cout << s << " " << len;
    return 0;
        
}
o/p = arun 4
---------------------------------------------------------------------------
basic for
========
#include<bits/stdc++.h>
using namespace std;
int main(){
    for(int i=0;i<10;i++){
        cout << "Arun\n";
    }
    return 0;
        
}
----------------------------------------------------------------------------
----------------------------------------------------------------------------
functions
=========
#include<bits/stdc++.h>
using namespace std;
    //functions are set of code which performs something for you
    //functions are used to modularise code
    //functions are used to increase readability
    //functions are used to write same code multiple times
    //void
    //return 
    //non paramterised
void print(string name){
    cout << "hey " << name <<endl;
}
int main(){
    string name1,name2;
    cin >> name1;
    cin >> name2;
    print(name1);
    print(name2);
    return 0;
        
}

input                             output
arun                              hey arun
prakash                           hey prakash
-----------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
void print(int num1,int num2){
    cout << "sum is " << num1+num2;
}
int main(){
    int num1,num2;
    cin >> num1;
    cin >> num2;
    print(num1,num2);
    return 0;
        
}
---------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int print(int num1,int num2){
    int res = num1+num2;
    return res;
}
int main(){
    int num1,num2;
    cin >> num1;
    cin >> num2;
    int res = print(num1,num2);
    cout << res;
    return 0;
        
}
-----------------------------------------------------------------------------------------
inbuilt min & max function
#include<bits/stdc++.h>
using namespace std;
int main(){
    int num1,num2;
    cin >> num1;
    cin >> num2;
    int minimum = min(num1,num2);
    cout << minimum;
    return 0;
        
}
-----------------------------------------------------------------------------------------
//passbyvalue it takes only copy of value when we print something inside main the original value will be accessed
#include<bits/stdc++.h>
using namespace std;
void dosomething(int num){
    cout << num<< endl;
    num += 10;
    cout << num<<endl;
}
int main(){
    int num=10;
    dosomething(num);
    cout << num;
    return 0; 
}
----------------------------------------------------------------------------------------------
//passbyreference it takes address and original value will be accessed
#include<bits/stdc++.h>
using namespace std;
void dosomething(int &num){
    cout << num<< endl;
    num += 20;
    cout << num<<endl;
}
int main(){
    int num=10;
    dosomething(num);
    cout << num;
    return 0; 
}
------------------------------------------------------------------------------------------------
time complexity
=================
#it does not based of time(seconds) example old windows and macbook
#rate at increase time taken with respect to input
big oh notation -> O( )
                     ^
                     |
                   time taken
# three important factors
  -> TC at worst case scenerio
  -> avoid constants
  -> avoid lower values

example for(i=0;i<n;i++){
        cout << i;
        }
here i will be executed 3 times for each iteration
so time complexity will be O(N*3)

three cases best case , average case , worst case
              |             |              |
            Omega        Theeta         Big-O 
          min time       avg time      max time taken to run  the code

When we use two for loop time complexity will be O(N^2)
 execution will be from 1,2,3,....n so natural number formula N(N+1)/2 = N^2/2 + N/2 this is the exact time complexity


Space Complexity
===============
memory space 
auxilary space (space take to solve problem) + input space (space take to store the problem)
example to add to numbers we use c = a + b . C is auxilary space and a,b is input space.

*********tampering input for SC is a wrong practice
-------------------------------------------------------------------------------------------------------------------